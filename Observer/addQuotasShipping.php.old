<?php
namespace Chronopost\Chronorelais\Observer;

use Magento\Framework\Event\Observer as EventObserver;
use Magento\Framework\Event\ObserverInterface;

class addQuotasShipping implements ObserverInterface
{
	public function __construct(  
        \Magento\Backend\App\Action\Context $context, 
		\Magento\Framework\App\Config\Storage\WriterInterface $configWriter,
		\Magento\Framework\App\Cache\TypeListInterface $cacheTypeList,
		\Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
	){ 
		$this->scopeConfig = $scopeConfig;
		$this->configWriter = $configWriter; 
		$this->cacheTypeList = $cacheTypeList;
	}

	public function execute(\Magento\Framework\Event\Observer $observer)
	{
		// checkout_onepage_controller_success_action
		// $order = $observer->getOrder();
		// $quote = $observer->getQuote();
		$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotas', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
		// $this->_autoCompletOrder->execute();
		// exit();  
		
		//si le quota est défini
		if($quotas && is_numeric($quotas)){
			
			$quotasdate = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasdate', \Magento\Store\Model\ScopeInterface::SCOPE_STORE); 
 
			//si la date n'est pas défini
			if(!$quotasdate || !strtotime($quotasdate)){
				$quotasdate = date('Y-m-d'); 
			}
			$quotasactuel = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasactuel', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
				 
				//si le quota actuel n'est pas défini
			if(!$quotasactuel || !is_numeric($quotasactuel)){
				$quotasactuel = 0;
			}
			//si le quota actuel n'est pas défini
			if($quotasdate < date('Y-m-d')){
				$quotasactuel = 0;
				$quotasdate = date('Y-m-d'); 
			}
			
			$timestamp = strtotime($quotasdate);
			$day = date('D', $timestamp);
	
			// exit();
			//si le quota actuel est atteint selon le jour
			switch ($day) {
				case "Mon":
					$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotaslundi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE); 
					break;
				case "Tue":
					$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasmardi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
					break;
				case "Wed":
					$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasmercredi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
					break;
				case "Thu":
					$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasjeudi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
					break;		 
				case "Fri":
					$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotasvendredi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
					break; 
				default:
				   $quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotaslundi', \Magento\Store\Model\ScopeInterface::SCOPE_STORE); 
			}
			if(!$quotas || !is_numeric($quotas)){
				$quotas = $this->scopeConfig->getValue('chronorelais/quotalivraison/quotas', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
			}
			
			//incrémentation
			$quotasactuel = $quotasactuel+1;
			//si le quota actuel est atteint
			if($quotasactuel == $quotas || $quotasactuel > $quotas){  
				$quotasdate = date('Y-m-d', strtotime($quotasdate . ' +1 day'));
				$quotasactuel = 0;
			} 
			
			$this->configWriter->save('chronorelais/quotalivraison/quotasdate',  $quotasdate, 'default', 0);	
			$this->configWriter->save('chronorelais/quotalivraison/quotasactuel',  $quotasactuel, 'default', 0);	
			$this->cacheTypeList->cleanType(\Magento\Framework\App\Cache\Type\Config::TYPE_IDENTIFIER);
			
		}
		
		return $this;
	}
}